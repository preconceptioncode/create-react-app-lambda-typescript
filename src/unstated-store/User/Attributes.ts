import { useImmer } from "use-immer";
import { TUserAttributes } from "../types";

export default function useTrueVaultUserAttributes() {
  const [attributes, updateAttributes] = useImmer<Partial<TUserAttributes>>({});
  return { attributes, updateAttributes };
}

export interface OrderResponseBody {
  order: OrderReponse;
}

export interface OrderReponse {
  id: number;
  status: string;
  confirmation_code: string;
  account_number: string;
  draw_location: string;
  take_tests_same_day: boolean;
  customer: Customer;
  tests: any[];
  test_groups: number[];
  clinical_note: null;
  reference: string;
  test_disclaimer_ids: any[];
  prior_genetic_testing: null;
  medication_list: null;
  custom_attributes: null;
  created_at: string;
  updated_at: string;
  expires_at: string;
  recollection_id: null;
  grouping: null;
  subscription_id: null;
  lab_acknowledged_on: null;
  links: Links;
  physician_review: PhysicianReview;
}

export interface Customer {
  external_id: string;
  first_name: string;
  last_name: string;
  birth_date: string; // "YYYY-MM-DD"
  gender: string; // "Female"
  country_code: string; // "+1"
  phone: string; // "XXX-XXX-XXXX"
  sms_opted_in: boolean;
  email: string;
  address: Address;
}

export interface Address {
  line: string;
  line2: string;
  city: string;
  state: string;
  zip: string;
}

export interface Links {
  ui_customer: string;
}

export interface PhysicianReview {
  name: string;
  upin: string;
  npi: string;
  reviewed_at: null | string;
}

// Generated by https://quicktype.io

export interface OrderRequestBody {
  order: OrderRequest;
}

export interface OrderRequest {
  test_groups: string[];
  reference: string; // user_id
  take_tests_same_day: boolean;
  customer: Customer;
}

export interface Customer {
  external_id: string; // user_id
  first_name: string;
  last_name: string;
  birth_date: string;
  gender: string;
  phone: string;
  email: string;
  address: Address;
}

export interface Address {
  line: string;
  line2: string;
  city: string;
  state: string;
  zip: string;
}
